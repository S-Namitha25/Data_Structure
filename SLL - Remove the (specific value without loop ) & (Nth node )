import java.util.*;
import java.lang.*;
class LL{
    Node head;
    class Node{
        int value;
        Node next;
        Node(int value){
            this.value=value;
            this.next=null;
        }
    }
    void insert(int value){
        Node newNode=new Node(value);
        if(head==null){
            head=newNode;
            return ;
        }
        Node temp=head;
        while(temp.next!=null){
            temp=temp.next;
            
        }
        temp.next=newNode;
        
    }

     void removeNode(int num){
        if(head==null){
            return;
        }
        if(head.value==num){
            head=head.next;
            return;
        }

        Node temp=head;
        while(temp.next!=null){
            if(temp.next.value==num){
                temp.next=temp.next.next;
                return;
            }
            temp=temp.next;

         }
     }
    void display(){
        if(head==null){
            System.out.print("empty");
            return;
        }
        Node temp=head;
        System.out.print("After removal : ");
        while(temp!=null){
            System.out.print(temp.value +" ");
            temp=temp.next;
        }
    }
}
class Main{
    public static void main(String[] args){
        Scanner in =new Scanner(System.in);
        LL list=new LL();
        System.out.print("range : ");
        int n=in.nextInt();
        int arr[]=new int[n];
        System.out.print("values : ");
        for(int i=0;i<n;i++){
            list.insert(in.nextInt());
        }
        System.out.print("need to remove the value : ");
        int num=in.nextInt();
        list.removeNode(num);
        list.display();
    }
}

Remove the N-th node from the end of a singly linked list.


import java.util.*;
import java.lang.*;
class LL{
    Node head;
    class Node{
        int value;
        Node next;
        Node(int value){
            this.value=value;
            this.next=null;
        }
    }
    void insert(int value){
        Node newNode=new Node(value);
        if(head==null){
            head=newNode;
            return ;
        }
        Node temp=head;
        while(temp.next!=null){
            temp=temp.next;
            
        }
        temp.next=newNode;
        
    }
     void removeNode(int num){
        if(head==null){
            return;
        }
        Node temp=head;
        
        int count=0;
        
        while(temp!=null){
            count++;
            temp=temp.next;
        }
        if(num==count){
           head=head.next;
           return;
        }
        
        temp=head;
        for(int i=1;i<count-num;i++){
            temp=temp.next;
        }
        if(temp.next!=null){
        temp.next=temp.next.next;
        }
     }
    void display(){
        if(head==null){
            System.out.print("empty");
            return;
        }
        Node temp=head;
        System.out.print("After removal : ");
        while(temp!=null){
            System.out.print(temp.value +" ");
            temp=temp.next;
        }
    }
}
class Main{
    public static void main(String[] args){
        Scanner in =new Scanner(System.in);
        LL list=new LL();
        System.out.print("range : ");
        int n=in.nextInt();
        int arr[]=new int[n];
        System.out.print("values : ");
        for(int i=0;i<n;i++){
            list.insert(in.nextInt());
        }
        System.out.print("need to remove the value : ");
        int num=in.nextInt();
        list.removeNode(num);
        list.display();
    }
}



