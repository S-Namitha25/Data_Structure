// SUM OF K SMALLEST ELEMENTS IN BST
import java.util.*;
class Main{  
    static int count=0;
    static int sum=0;
static class Node{
    
    int value;
    Node left;
    Node right;
    Node(int value){
        this.value=value;
        left=null;
        right=null;
    }
}
    static Node insert(Node node,int value)
    {
        if(node==null){
            return new Node(value);
        }
        if(value<node.value){
            node.left=insert(node.left ,value);
        }
        if(value>node.value){
            node.right=insert(node.right ,value);
        }
        return node;
    }
    static void inorder(Node root,int k){
       
        if(root==null || count >= k)
        {
            return;
        }
        inorder(root.left, k);
        
        if(count < k){
            sum += root.value;  //8+10+12=30
            count++;
        }
        
        inorder(root.right ,k);
    }
        public static void main(String[] args)
        {
         Scanner in=new Scanner(System.in);
         Node root=null;
         System.out.print("range of n : ");
         int n=in.nextInt();
         System.out.print("values are : ");
         for(int i=0;i<n;i++)
          {
               int value=in.nextInt();
              root=insert(root ,value);
        }
        System.out.print("no. of smallest value to sum : ");
        int k=in.nextInt();
        count=0;
        sum=0;
        inorder(root , k);
        System.out.print("Sum of k smallest element is : " + sum);
    }
}
