import java.util.*;
class BST{
     Node root=null;
        int count=0;
        int result =0;
    class Node{
        int val;
        Node left;
        Node right;
        Node(int val){
            this.val=val;
            left=null;
            right=null;
        }
    }
    Node insert(Node root, int val){
        if(root==null ){
            return new Node(val);
        }
        if(val<root.val){
            root.left=insert(root.left, val);
        }
        if(val>root.val){
            root.right=insert(root.right, val);
        }
        return root;
    }
    void inorder(Node root, int k){
        if(root==null || count>=k){
            return;
        }
        inorder(root.right,k);
        count++;
        if(count==k){
            result = root.val;
        }
        
        inorder(root.left , k);
    }

    public static void main(String[] args){
        Scanner in=new Scanner(System.in);
       BST tree=new BST();
       System.out.print("n : ");
        int n=in.nextInt();
        System.out.print("val : ");
        for(int i=0;i<n;i++){
            int val=in.nextInt();
            tree.root=tree.insert(tree.root, val);
        }
        System.out.print("k largest value : ");
        int k=in.nextInt();
        tree.inorder(tree.root, k);
        System.out.print("the "+ k + "largest element is:  "+tree.result);
    }
    }
